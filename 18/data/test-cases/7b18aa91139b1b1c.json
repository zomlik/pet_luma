{"uid":"7b18aa91139b1b1c","name":"Add an item to the cart without opening the product page and without selecting options)","fullName":"tests.test_items.TestMiniItems#test_add_to_cart_without_option","historyId":"f679dae9de98460e00eb32e1f10832f2","time":{"start":1729149885804,"stop":1729149890097,"duration":4293},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5580f9c4f02a <unknown>\n#1 0x5580f99355e0 <unknown>\n#2 0x5580f998b866 <unknown>\n#3 0x5580f998978d <unknown>\n#4 0x5580f9987237 <unknown>\n#5 0x5580f9986646 <unknown>\n#6 0x5580f9979a98 <unknown>\n#7 0x5580f99a9b22 <unknown>\n#8 0x5580f9979478 <unknown>\n#9 0x5580f99a9cee <unknown>\n#10 0x5580f99c8d7d <unknown>\n#11 0x5580f99a98c3 <unknown>\n#12 0x5580f99776b3 <unknown>\n#13 0x5580f997868e <unknown>\n#14 0x5580f9c19a2b <unknown>\n#15 0x5580f9c1d9b1 <unknown>\n#16 0x5580f9c06225 <unknown>\n#17 0x5580f9c1e532 <unknown>\n#18 0x5580f9beb38f <unknown>\n#19 0x5580f9c3df28 <unknown>\n#20 0x5580f9c3e0f3 <unknown>\n#21 0x5580f9c4de7c <unknown>\n#22 0x7f1a54494ac3 <unknown>","statusTrace":"self = <test_items.TestMiniItems object at 0x7fae2e9544a0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"00a5395facd83b43f123ddc1608f2126\")>\n\n    @allure.title(\"Add an item to the cart without opening the product\"\n                  \" page and without selecting options)\")\n    def test_add_to_cart_without_option(self, browser):\n        page = MiniItem(browser)\n        page.open(URL.MAIN_MAIGE)\n>       page.choose_item_and_add_to_cart(num_item=3)\n\ntests/test_items.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:12: in choose_item_and_add_to_cart\n    return self.is_clickable(ItemLocators.MINI_ITEMS_ADD_TO_CART).click()\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fae2f2cc830>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5580f9c3e0f3 \\\\u003Cunknown>\\\\n#21 0x5580f9c4de7c \\\\u003Cunknown>\\\\n#22 0x7f1a54494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x5580f9c4f02a <unknown>\nE       #1 0x5580f99355e0 <unknown>\nE       #2 0x5580f998b866 <unknown>\nE       #3 0x5580f998978d <unknown>\nE       #4 0x5580f9987237 <unknown>\nE       #5 0x5580f9986646 <unknown>\nE       #6 0x5580f9979a98 <unknown>\nE       #7 0x5580f99a9b22 <unknown>\nE       #8 0x5580f9979478 <unknown>\nE       #9 0x5580f99a9cee <unknown>\nE       #10 0x5580f99c8d7d <unknown>\nE       #11 0x5580f99a98c3 <unknown>\nE       #12 0x5580f99776b3 <unknown>\nE       #13 0x5580f997868e <unknown>\nE       #14 0x5580f9c19a2b <unknown>\nE       #15 0x5580f9c1d9b1 <unknown>\nE       #16 0x5580f9c06225 <unknown>\nE       #17 0x5580f9c1e532 <unknown>\nE       #18 0x5580f9beb38f <unknown>\nE       #19 0x5580f9c3df28 <unknown>\nE       #20 0x5580f9c3e0f3 <unknown>\nE       #21 0x5580f9c4de7c <unknown>\nE       #22 0x7f1a54494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1729149885470,"stop":1729149885804,"duration":334},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_options","time":{"start":1729149885470,"stop":1729149885470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5580f9c4f02a <unknown>\n#1 0x5580f99355e0 <unknown>\n#2 0x5580f998b866 <unknown>\n#3 0x5580f998978d <unknown>\n#4 0x5580f9987237 <unknown>\n#5 0x5580f9986646 <unknown>\n#6 0x5580f9979a98 <unknown>\n#7 0x5580f99a9b22 <unknown>\n#8 0x5580f9979478 <unknown>\n#9 0x5580f99a9cee <unknown>\n#10 0x5580f99c8d7d <unknown>\n#11 0x5580f99a98c3 <unknown>\n#12 0x5580f99776b3 <unknown>\n#13 0x5580f997868e <unknown>\n#14 0x5580f9c19a2b <unknown>\n#15 0x5580f9c1d9b1 <unknown>\n#16 0x5580f9c06225 <unknown>\n#17 0x5580f9c1e532 <unknown>\n#18 0x5580f9beb38f <unknown>\n#19 0x5580f9c3df28 <unknown>\n#20 0x5580f9c3e0f3 <unknown>\n#21 0x5580f9c4de7c <unknown>\n#22 0x7f1a54494ac3 <unknown>","statusTrace":"self = <test_items.TestMiniItems object at 0x7fae2e9544a0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"00a5395facd83b43f123ddc1608f2126\")>\n\n    @allure.title(\"Add an item to the cart without opening the product\"\n                  \" page and without selecting options)\")\n    def test_add_to_cart_without_option(self, browser):\n        page = MiniItem(browser)\n        page.open(URL.MAIN_MAIGE)\n>       page.choose_item_and_add_to_cart(num_item=3)\n\ntests/test_items.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:12: in choose_item_and_add_to_cart\n    return self.is_clickable(ItemLocators.MINI_ITEMS_ADD_TO_CART).click()\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fae2f2cc830>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5580f9c3e0f3 \\\\u003Cunknown>\\\\n#21 0x5580f9c4de7c \\\\u003Cunknown>\\\\n#22 0x7f1a54494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x5580f9c4f02a <unknown>\nE       #1 0x5580f99355e0 <unknown>\nE       #2 0x5580f998b866 <unknown>\nE       #3 0x5580f998978d <unknown>\nE       #4 0x5580f9987237 <unknown>\nE       #5 0x5580f9986646 <unknown>\nE       #6 0x5580f9979a98 <unknown>\nE       #7 0x5580f99a9b22 <unknown>\nE       #8 0x5580f9979478 <unknown>\nE       #9 0x5580f99a9cee <unknown>\nE       #10 0x5580f99c8d7d <unknown>\nE       #11 0x5580f99a98c3 <unknown>\nE       #12 0x5580f99776b3 <unknown>\nE       #13 0x5580f997868e <unknown>\nE       #14 0x5580f9c19a2b <unknown>\nE       #15 0x5580f9c1d9b1 <unknown>\nE       #16 0x5580f9c06225 <unknown>\nE       #17 0x5580f9c1e532 <unknown>\nE       #18 0x5580f9beb38f <unknown>\nE       #19 0x5580f9c3df28 <unknown>\nE       #20 0x5580f9c3e0f3 <unknown>\nE       #21 0x5580f9c4de7c <unknown>\nE       #22 0x7f1a54494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open page","time":{"start":1729149885805,"stop":1729149888510,"duration":2705},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://magento.softwaretestingboard.com/'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Selecting an item without options and adding it to the cart","time":{"start":1729149888510,"stop":1729149890096,"duration":1586},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5580f9c4f02a <unknown>\n#1 0x5580f99355e0 <unknown>\n#2 0x5580f998b866 <unknown>\n#3 0x5580f998978d <unknown>\n#4 0x5580f9987237 <unknown>\n#5 0x5580f9986646 <unknown>\n#6 0x5580f9979a98 <unknown>\n#7 0x5580f99a9b22 <unknown>\n#8 0x5580f9979478 <unknown>\n#9 0x5580f99a9cee <unknown>\n#10 0x5580f99c8d7d <unknown>\n#11 0x5580f99a98c3 <unknown>\n#12 0x5580f99776b3 <unknown>\n#13 0x5580f997868e <unknown>\n#14 0x5580f9c19a2b <unknown>\n#15 0x5580f9c1d9b1 <unknown>\n#16 0x5580f9c06225 <unknown>\n#17 0x5580f9c1e532 <unknown>\n#18 0x5580f9beb38f <unknown>\n#19 0x5580f9c3df28 <unknown>\n#20 0x5580f9c3e0f3 <unknown>\n#21 0x5580f9c4de7c <unknown>\n#22 0x7f1a54494ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/pet_luma/pet_luma/pages/item_page.py\", line 12, in choose_item_and_add_to_cart\n    return self.is_clickable(ItemLocators.MINI_ITEMS_ADD_TO_CART).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"num_item","value":"3"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"ac1b08db7faa5778","name":"Screenshot 2024-10-17 07:24:50.375773","source":"ac1b08db7faa5778.png","type":"image/png","size":872441}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1729149890378,"stop":1729149890457,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Products"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestMiniItems"},{"name":"host","value":"fv-az1543-714"},{"name":"thread","value":"2149-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_items"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"aa5bdb238d776e85","reportUrl":"https://zomlik.github.io/pet_luma/17//#testresult/aa5bdb238d776e85","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div class=\"page-wrapper\" style=\"height: auto !important; min-height: 0px !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55d1e01f302a <unknown>\n#1 0x55d1dfed95e0 <unknown>\n#2 0x55d1dff2f866 <unknown>\n#3 0x55d1dff2d78d <unknown>\n#4 0x55d1dff2b237 <unknown>\n#5 0x55d1dff2a646 <unknown>\n#6 0x55d1dff1da98 <unknown>\n#7 0x55d1dff4db22 <unknown>\n#8 0x55d1dff1d478 <unknown>\n#9 0x55d1dff4dcee <unknown>\n#10 0x55d1dff6cd7d <unknown>\n#11 0x55d1dff4d8c3 <unknown>\n#12 0x55d1dff1b6b3 <unknown>\n#13 0x55d1dff1c68e <unknown>\n#14 0x55d1e01bda2b <unknown>\n#15 0x55d1e01c19b1 <unknown>\n#16 0x55d1e01aa225 <unknown>\n#17 0x55d1e01c2532 <unknown>\n#18 0x55d1e018f38f <unknown>\n#19 0x55d1e01e1f28 <unknown>\n#20 0x55d1e01e20f3 <unknown>\n#21 0x55d1e01f1e7c <unknown>\n#22 0x7f337ca94ac3 <unknown>","time":{"start":1728991878167,"stop":1728991881072,"duration":2905}},{"uid":"30c74cee39d48648","reportUrl":"https://zomlik.github.io/pet_luma/16//#testresult/30c74cee39d48648","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div class=\"page-wrapper\" style=\"height: auto !important; min-height: 0px !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x557057d8502a <unknown>\n#1 0x557057a6b5e0 <unknown>\n#2 0x557057ac1866 <unknown>\n#3 0x557057abf78d <unknown>\n#4 0x557057abd237 <unknown>\n#5 0x557057abc646 <unknown>\n#6 0x557057aafa98 <unknown>\n#7 0x557057adfb22 <unknown>\n#8 0x557057aaf478 <unknown>\n#9 0x557057adfcee <unknown>\n#10 0x557057afed7d <unknown>\n#11 0x557057adf8c3 <unknown>\n#12 0x557057aad6b3 <unknown>\n#13 0x557057aae68e <unknown>\n#14 0x557057d4fa2b <unknown>\n#15 0x557057d539b1 <unknown>\n#16 0x557057d3c225 <unknown>\n#17 0x557057d54532 <unknown>\n#18 0x557057d2138f <unknown>\n#19 0x557057d73f28 <unknown>\n#20 0x557057d740f3 <unknown>\n#21 0x557057d83e7c <unknown>\n#22 0x7fc4dc694ac3 <unknown>","time":{"start":1728976508380,"stop":1728976511100,"duration":2720}},{"uid":"fca31dbf43f46d5d","reportUrl":"https://zomlik.github.io/pet_luma/15//#testresult/fca31dbf43f46d5d","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div class=\"page-wrapper\" style=\"height: auto !important; min-height: 0px !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55ca473d302a <unknown>\n#1 0x55ca470b95e0 <unknown>\n#2 0x55ca4710f866 <unknown>\n#3 0x55ca4710d78d <unknown>\n#4 0x55ca4710b237 <unknown>\n#5 0x55ca4710a646 <unknown>\n#6 0x55ca470fda98 <unknown>\n#7 0x55ca4712db22 <unknown>\n#8 0x55ca470fd478 <unknown>\n#9 0x55ca4712dcee <unknown>\n#10 0x55ca4714cd7d <unknown>\n#11 0x55ca4712d8c3 <unknown>\n#12 0x55ca470fb6b3 <unknown>\n#13 0x55ca470fc68e <unknown>\n#14 0x55ca4739da2b <unknown>\n#15 0x55ca473a19b1 <unknown>\n#16 0x55ca4738a225 <unknown>\n#17 0x55ca473a2532 <unknown>\n#18 0x55ca4736f38f <unknown>\n#19 0x55ca473c1f28 <unknown>\n#20 0x55ca473c20f3 <unknown>\n#21 0x55ca473d1e7c <unknown>\n#22 0x7f4f28e94ac3 <unknown>","time":{"start":1728975797141,"stop":1728975799834,"duration":2693}},{"uid":"dc5e0fa5222d07e4","reportUrl":"https://zomlik.github.io/pet_luma/14//#testresult/dc5e0fa5222d07e4","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" title=\"Add to Cart\" class=\"action tocart primary\">...</button> is not clickable at point (0, 923). Other element would receive the click: <div class=\"page-wrapper\" style=\"height: auto !important; min-height: 0px !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x55581ac2302a <unknown>\n#1 0x55581a9095e0 <unknown>\n#2 0x55581a95f866 <unknown>\n#3 0x55581a95d78d <unknown>\n#4 0x55581a95b237 <unknown>\n#5 0x55581a95a646 <unknown>\n#6 0x55581a94da98 <unknown>\n#7 0x55581a97db22 <unknown>\n#8 0x55581a94d478 <unknown>\n#9 0x55581a97dcee <unknown>\n#10 0x55581a99cd7d <unknown>\n#11 0x55581a97d8c3 <unknown>\n#12 0x55581a94b6b3 <unknown>\n#13 0x55581a94c68e <unknown>\n#14 0x55581abeda2b <unknown>\n#15 0x55581abf19b1 <unknown>\n#16 0x55581abda225 <unknown>\n#17 0x55581abf2532 <unknown>\n#18 0x55581abbf38f <unknown>\n#19 0x55581ac11f28 <unknown>\n#20 0x55581ac120f3 <unknown>\n#21 0x55581ac21e7c <unknown>\n#22 0x7fa1dd894ac3 <unknown>","time":{"start":1728891946038,"stop":1728891949949,"duration":3911}}]},"tags":[]},"source":"7b18aa91139b1b1c.json","parameterValues":[]}