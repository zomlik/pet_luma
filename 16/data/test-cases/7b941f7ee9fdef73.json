{"uid":"7b941f7ee9fdef73","name":"Create an account with invalid email: @mail.com","fullName":"tests.test_create_account.TestCreateAccount#test_create_account_empty_email_name_field","historyId":"3e7b2e66ac55b284eed84f6ac904629a","time":{"start":1728976491782,"stop":1728976495649,"duration":3867},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"action submit primary\" title=\"Create an Account\">...</button> is not clickable at point (410, 828). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x560d79d2002a <unknown>\n#1 0x560d79a065e0 <unknown>\n#2 0x560d79a5c866 <unknown>\n#3 0x560d79a5a78d <unknown>\n#4 0x560d79a58237 <unknown>\n#5 0x560d79a57646 <unknown>\n#6 0x560d79a4aa98 <unknown>\n#7 0x560d79a7ab22 <unknown>\n#8 0x560d79a4a478 <unknown>\n#9 0x560d79a7acee <unknown>\n#10 0x560d79a99d7d <unknown>\n#11 0x560d79a7a8c3 <unknown>\n#12 0x560d79a486b3 <unknown>\n#13 0x560d79a4968e <unknown>\n#14 0x560d79ceaa2b <unknown>\n#15 0x560d79cee9b1 <unknown>\n#16 0x560d79cd7225 <unknown>\n#17 0x560d79cef532 <unknown>\n#18 0x560d79cbc38f <unknown>\n#19 0x560d79d0ef28 <unknown>\n#20 0x560d79d0f0f3 <unknown>\n#21 0x560d79d1ee7c <unknown>\n#22 0x7fc0e8094ac3 <unknown>","statusTrace":"self = <test_create_account.TestCreateAccount object at 0x7f440aaff2f0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c11833541a9678077fbeba989965b71\")>\nemail = '@mail.com'\n\n    @allure.title(\"Create an account with invalid email: {email}\")\n    @pytest.mark.parametrize(\"email\", [\"123.com\", \"@mail.com\", \"123mail.com\"])\n    def test_create_account_empty_email_name_field(self, browser, email):\n        page = CreateAccount(browser)\n        page.open(URL.CREATE_ACCOUNT)\n>       page.create_account(first_name=FakeData.first_name(),\n                            last_name=FakeData.last_name(),\n                            email=email,\n                            password=\"123456789\",\n                            confirmation_password=\"123456789\")\n\ntests/test_create_account.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/create_account.py:25: in create_account\n    self.is_clickable(CreateAccountLocators.CREATE_ACCOUNT_BUTTON).click()\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f440a9f0da0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d79d0f0f3 \\\\u003Cunknown>\\\\n#21 0x560d79d1ee7c \\\\u003Cunknown>\\\\n#22 0x7fc0e8094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"action submit primary\" title=\"Create an Account\">...</button> is not clickable at point (410, 828). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x560d79d2002a <unknown>\nE       #1 0x560d79a065e0 <unknown>\nE       #2 0x560d79a5c866 <unknown>\nE       #3 0x560d79a5a78d <unknown>\nE       #4 0x560d79a58237 <unknown>\nE       #5 0x560d79a57646 <unknown>\nE       #6 0x560d79a4aa98 <unknown>\nE       #7 0x560d79a7ab22 <unknown>\nE       #8 0x560d79a4a478 <unknown>\nE       #9 0x560d79a7acee <unknown>\nE       #10 0x560d79a99d7d <unknown>\nE       #11 0x560d79a7a8c3 <unknown>\nE       #12 0x560d79a486b3 <unknown>\nE       #13 0x560d79a4968e <unknown>\nE       #14 0x560d79ceaa2b <unknown>\nE       #15 0x560d79cee9b1 <unknown>\nE       #16 0x560d79cd7225 <unknown>\nE       #17 0x560d79cef532 <unknown>\nE       #18 0x560d79cbc38f <unknown>\nE       #19 0x560d79d0ef28 <unknown>\nE       #20 0x560d79d0f0f3 <unknown>\nE       #21 0x560d79d1ee7c <unknown>\nE       #22 0x7fc0e8094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"chrome_options","time":{"start":1728976491509,"stop":1728976491510,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1728976491510,"stop":1728976491781,"duration":271},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"action submit primary\" title=\"Create an Account\">...</button> is not clickable at point (410, 828). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x560d79d2002a <unknown>\n#1 0x560d79a065e0 <unknown>\n#2 0x560d79a5c866 <unknown>\n#3 0x560d79a5a78d <unknown>\n#4 0x560d79a58237 <unknown>\n#5 0x560d79a57646 <unknown>\n#6 0x560d79a4aa98 <unknown>\n#7 0x560d79a7ab22 <unknown>\n#8 0x560d79a4a478 <unknown>\n#9 0x560d79a7acee <unknown>\n#10 0x560d79a99d7d <unknown>\n#11 0x560d79a7a8c3 <unknown>\n#12 0x560d79a486b3 <unknown>\n#13 0x560d79a4968e <unknown>\n#14 0x560d79ceaa2b <unknown>\n#15 0x560d79cee9b1 <unknown>\n#16 0x560d79cd7225 <unknown>\n#17 0x560d79cef532 <unknown>\n#18 0x560d79cbc38f <unknown>\n#19 0x560d79d0ef28 <unknown>\n#20 0x560d79d0f0f3 <unknown>\n#21 0x560d79d1ee7c <unknown>\n#22 0x7fc0e8094ac3 <unknown>","statusTrace":"self = <test_create_account.TestCreateAccount object at 0x7f440aaff2f0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c11833541a9678077fbeba989965b71\")>\nemail = '@mail.com'\n\n    @allure.title(\"Create an account with invalid email: {email}\")\n    @pytest.mark.parametrize(\"email\", [\"123.com\", \"@mail.com\", \"123mail.com\"])\n    def test_create_account_empty_email_name_field(self, browser, email):\n        page = CreateAccount(browser)\n        page.open(URL.CREATE_ACCOUNT)\n>       page.create_account(first_name=FakeData.first_name(),\n                            last_name=FakeData.last_name(),\n                            email=email,\n                            password=\"123456789\",\n                            confirmation_password=\"123456789\")\n\ntests/test_create_account.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/create_account.py:25: in create_account\n    self.is_clickable(CreateAccountLocators.CREATE_ACCOUNT_BUTTON).click()\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f440a9f0da0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560d79d0f0f3 \\\\u003Cunknown>\\\\n#21 0x560d79d1ee7c \\\\u003Cunknown>\\\\n#22 0x7fc0e8094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"action submit primary\" title=\"Create an Account\">...</button> is not clickable at point (410, 828). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x560d79d2002a <unknown>\nE       #1 0x560d79a065e0 <unknown>\nE       #2 0x560d79a5c866 <unknown>\nE       #3 0x560d79a5a78d <unknown>\nE       #4 0x560d79a58237 <unknown>\nE       #5 0x560d79a57646 <unknown>\nE       #6 0x560d79a4aa98 <unknown>\nE       #7 0x560d79a7ab22 <unknown>\nE       #8 0x560d79a4a478 <unknown>\nE       #9 0x560d79a7acee <unknown>\nE       #10 0x560d79a99d7d <unknown>\nE       #11 0x560d79a7a8c3 <unknown>\nE       #12 0x560d79a486b3 <unknown>\nE       #13 0x560d79a4968e <unknown>\nE       #14 0x560d79ceaa2b <unknown>\nE       #15 0x560d79cee9b1 <unknown>\nE       #16 0x560d79cd7225 <unknown>\nE       #17 0x560d79cef532 <unknown>\nE       #18 0x560d79cbc38f <unknown>\nE       #19 0x560d79d0ef28 <unknown>\nE       #20 0x560d79d0f0f3 <unknown>\nE       #21 0x560d79d1ee7c <unknown>\nE       #22 0x7fc0e8094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Открытие cтраницы","time":{"start":1728976491782,"stop":1728976494153,"duration":2371},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://magento.softwaretestingboard.com/customer/account/create/'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Fill first name field","time":{"start":1728976494153,"stop":1728976494250,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Fill last name field","time":{"start":1728976494250,"stop":1728976494312,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Fill email field","time":{"start":1728976494312,"stop":1728976494395,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Fill password field","time":{"start":1728976494395,"stop":1728976494485,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Fill confirm password field","time":{"start":1728976494485,"stop":1728976494540,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click on Create an account button","time":{"start":1728976494540,"stop":1728976495648,"duration":1108},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"action submit primary\" title=\"Create an Account\">...</button> is not clickable at point (410, 828). Other element would receive the click: <div id=\"aswift_4_host\" style=\"border: none !important; height: 124px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;\">...</div>\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x560d79d2002a <unknown>\n#1 0x560d79a065e0 <unknown>\n#2 0x560d79a5c866 <unknown>\n#3 0x560d79a5a78d <unknown>\n#4 0x560d79a58237 <unknown>\n#5 0x560d79a57646 <unknown>\n#6 0x560d79a4aa98 <unknown>\n#7 0x560d79a7ab22 <unknown>\n#8 0x560d79a4a478 <unknown>\n#9 0x560d79a7acee <unknown>\n#10 0x560d79a99d7d <unknown>\n#11 0x560d79a7a8c3 <unknown>\n#12 0x560d79a486b3 <unknown>\n#13 0x560d79a4968e <unknown>\n#14 0x560d79ceaa2b <unknown>\n#15 0x560d79cee9b1 <unknown>\n#16 0x560d79cd7225 <unknown>\n#17 0x560d79cef532 <unknown>\n#18 0x560d79cbc38f <unknown>\n#19 0x560d79d0ef28 <unknown>\n#20 0x560d79d0f0f3 <unknown>\n#21 0x560d79d1ee7c <unknown>\n#22 0x7fc0e8094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/pet_luma/pet_luma/pages/create_account.py\", line 25, in create_account\n    self.is_clickable(CreateAccountLocators.CREATE_ACCOUNT_BUTTON).click()\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1728976495711,"stop":1728976495783,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Registration"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestCreateAccount"},{"name":"host","value":"fv-az1016-149"},{"name":"thread","value":"2213-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_create_account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'@mail.com'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"5308c61be72342b6","reportUrl":"https://zomlik.github.io/pet_luma/15//#testresult/5308c61be72342b6","status":"passed","time":{"start":1728975782180,"stop":1728975783994,"duration":1814}},{"uid":"8f3c870bef522b1f","reportUrl":"https://zomlik.github.io/pet_luma/14//#testresult/8f3c870bef522b1f","status":"passed","time":{"start":1728891932095,"stop":1728891933845,"duration":1750}}]},"tags":[]},"source":"7b941f7ee9fdef73.json","parameterValues":["'@mail.com'"]}